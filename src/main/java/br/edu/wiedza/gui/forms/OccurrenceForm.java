/*
 * The MIT License
 *
 * Copyright 2023 maicon.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
package br.edu.wiedza.gui.forms;

import br.edu.wiedza.db.dao.OccurrenceDao;
import br.edu.wiedza.entities.Occurrence;
import br.edu.wiedza.entities.persons.Student;
import br.edu.wiedza.gui.LoginFrame;
import java.time.LocalDate;
import java.util.List;

/**
 *
 * @author maicon
 */
public class OccurrenceForm extends javax.swing.JFrame {

    private final Occurrence occurrence;
    private final List<Student> students;
    
    private final boolean readOnly;
    
    
    /**
     * Creates new form OccurrenceForm
     * @param occurrence
     * @param students
     * @param readOnly
     */
    public OccurrenceForm(Occurrence occurrence, List<Student> students, boolean readOnly) {
        initComponents();
        
        setLocationRelativeTo(null);
        
        this.readOnly = readOnly;
        this.occurrence = occurrence;
        this.students = students;
        
        set();
    }
    
    private void set() {
        
        if(occurrence != null){
            
            txtEnrollment.setText(occurrence.getStudent().getId().get().toString());
            
            spinnerDay.setValue(Integer.valueOf(occurrence.getDate().getDayOfMonth()));
            spinnerMonth.setValue(Integer.valueOf(occurrence.getDate().getMonthValue()));
            spinnerYear.setValue(Integer.valueOf(Integer.valueOf(occurrence.getDate().getYear())));
            
            txtDescription.setText(occurrence.getDescription());
        }
        
        if(readOnly){
            
            txtEnrollment.setEnabled(false);
            txtDescription.setEnabled(false);
            
            spinnerDay.setEnabled(false);
            spinnerMonth.setEnabled(false);
            spinnerYear.setEnabled(false);
        }
    }
    
    private void invalidFieldMessage(String s) {
        lblEnrollmentStatus.setForeground(LoginFrame.DEFAULT_RED);
        lblEnrollmentStatus.setText(s);      
    }
    
    private void updateEntity(){
        
        final var enrollment = txtEnrollment.getText();
        final var date = LocalDate.of(
                (Integer) spinnerYear.getValue(),
                (Integer) spinnerMonth.getValue(),
                (Integer) spinnerDay.getValue()
                );
        
        final var description = txtDescription.getText();
        
        final var id = (occurrence == null ? null : occurrence.getId().get());
        
        Student student = null;
        for(Student s : students){
            if(s.getId().get().equals(Integer.valueOf(enrollment))){
                student = s;
                break;
            }
        }
        
        OccurrenceDao.getInstance().createOrUpdate(new Occurrence(student, date, description, id));
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        lblEnrollment = new javax.swing.JLabel();
        txtEnrollment = new javax.swing.JTextField();
        lblDate = new javax.swing.JLabel();
        spinnerDay = new javax.swing.JSpinner();
        spinnerMonth = new javax.swing.JSpinner();
        spinnerYear = new javax.swing.JSpinner();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDescription = new javax.swing.JTextArea();
        lblDescription = new javax.swing.JLabel();
        btnOk = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        lblStatus = new javax.swing.JLabel();
        lblEnrollmentStatus = new javax.swing.JLabel();
        lblDatabaseStatus = new javax.swing.JLabel();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Fomulário de ocorrência");

        lblEnrollment.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblEnrollment.setText("Matrícula do aluno:");

        txtEnrollment.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtEnrollment.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtEnrollmentFocusLost(evt);
            }
        });

        lblDate.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblDate.setText("Data da ocorrência:");

        spinnerDay.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        spinnerDay.setModel(new javax.swing.SpinnerNumberModel(1, 1, 31, 1));

        spinnerMonth.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        spinnerMonth.setModel(new javax.swing.SpinnerNumberModel(1, 1, 12, 1));

        spinnerYear.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        spinnerYear.setModel(new javax.swing.SpinnerNumberModel(2005, 1923, 2005, 1));

        txtDescription.setColumns(20);
        txtDescription.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtDescription.setRows(5);
        jScrollPane1.setViewportView(txtDescription);

        lblDescription.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblDescription.setText("Descrição:");

        btnOk.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnOk.setText("OK");
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        lblStatus.setFont(new java.awt.Font("DejaVu Sans", 0, 14)); // NOI18N
        lblStatus.setText(" ");

        lblEnrollmentStatus.setText(" ");

        lblDatabaseStatus.setFont(new java.awt.Font("DejaVu Sans", 0, 14)); // NOI18N
        lblDatabaseStatus.setText(" ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblEnrollmentStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblEnrollment)
                            .addComponent(txtEnrollment, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblDate)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(spinnerDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(spinnerMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(spinnerYear, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(btnOk, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(lblDatabaseStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(368, 368, 368)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblStatus))))
                    .addComponent(lblDescription)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEnrollment)
                    .addComponent(lblDate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEnrollment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinnerDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinnerMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinnerYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addComponent(lblEnrollmentStatus)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblDescription)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOk)
                    .addComponent(lblDatabaseStatus))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lblStatus))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtEnrollmentFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEnrollmentFocusLost
        
        btnOk.setEnabled(false);
        
        final var enrollment = txtEnrollment.getText();
                
        for(Student s : students){
            
            if(s.getId().get().equals(Integer.valueOf(enrollment))){
                btnOk.setEnabled(true);
                invalidFieldMessage("Aluno: " + s.getName());
                return;
            }
        }
        invalidFieldMessage("Não existe um aluno com essa matrícula.");       
    }//GEN-LAST:event_txtEnrollmentFocusLost

    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
    
        if(!readOnly){
            
            lblDatabaseStatus.setText("Salvando no banco de dados...");
            java.awt.EventQueue.invokeLater(() -> updateEntity());
        }
        dispose();
    }//GEN-LAST:event_btnOkActionPerformed
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnOk;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDatabaseStatus;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblDescription;
    private javax.swing.JLabel lblEnrollment;
    private javax.swing.JLabel lblEnrollmentStatus;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JSpinner spinnerDay;
    private javax.swing.JSpinner spinnerMonth;
    private javax.swing.JSpinner spinnerYear;
    private javax.swing.JTextArea txtDescription;
    private javax.swing.JTextField txtEnrollment;
    // End of variables declaration//GEN-END:variables
}
